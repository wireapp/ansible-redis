---
dependency:
  name: galaxy
driver:
  name: docker
lint:
  name: yamllint
platforms:
  # three instances, in the 'redis' group.
  - name: instance
    # for systemd, use these base images:
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu1804}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    networks_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro  # for systemd
      - /run/dbus/system_bus_socket:/run/dbus/system_bus_socket:ro  # for ntp/timedatectl
    privileged: true  # for systemd
    groups:
      - redis
    pre_build_image: true
  - name: instance2
    # for systemd, use these base images:
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu1804}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    networks_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro  # for systemd
      - /run/dbus/system_bus_socket:/run/dbus/system_bus_socket:ro  # for ntp/timedatectl
    privileged: true  # for systemd
    groups:
      - redis
    pre_build_image: true
  - name: instance3
    # for systemd, use these base images:
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu1804}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    networks_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro  # for systemd
      - /run/dbus/system_bus_socket:/run/dbus/system_bus_socket:ro  # for ntp/timedatectl
    privileged: true  # for systemd
    groups:
      - redis
    pre_build_image: true
provisioner:
  name: ansible
  lint:
    name: ansible-lint
scenario:
  name: default
verifier:
  name: testinfra
  lint:
    name: flake8
